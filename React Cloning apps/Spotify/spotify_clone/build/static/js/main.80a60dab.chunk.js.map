{"version":3,"sources":["spotify.js","Components/LoginPage/LoginPage.js","State/DataLayer.js","Components/Header/Header.js","Components/SongRow/SongRow.js","Components/Body/Body.js","Components/Footer/Footer.js","Components/SideBarOption/SideBarOption.js","Components/SideBar/SideBar.js","Components/Player/Player.js","App.js","reportWebVitals.js","State/reducer.js","index.js"],"names":["getTokenFromUrl","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","loginUrl","concat","join","LoginPage","react_default","a","createElement","className","src","alt","href","DataLayerContext","createContext","DataLayer","_ref","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Header","_useDataLayerValue","_useDataLayerValue2","Object","slicedToArray","user","Search","placeholder","type","Avatar","images","url","display_name","SongRow","track","album","name","artists","map","artist","Body","spotify","discover_weekly","console","log","Components_Header_Header","img","description","PlayCircleFilled","Favorite","fontSize","MoreHoriz","tracks","items","Components_SongRow_SongRow","Footer","classNmae","Shuffle","SkipPrevious","PlayCircleOutline","SkipNext","Repeat","Grid","container","spacing","PlaylistPlay","VolumeDown","xs","Slider","SideBarOption","title","Icon","SideBar","playlists","Components_SideBarOption_SideBarOption","HomeIcon","SearchIcon","LibraryMusic","classNem","playlist","Player","Components_SideBar_SideBar","Components_Body_Body","Components_Footer_Footer","SpotifyWebApi","App","_useDataLayerValue2$","token","dispatch","useEffect","_token","access_token","setAccessToken","getMe","then","getUserPlaylists","getPlaylist","Components_Player_Player","Components_LoginPage_LoginPage","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","state","action","objectSpread","ReactDOM","createRoot","document","getElementById","render","StrictMode","DataLayer_DataLayer","playing","src_App"],"mappings":"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","file":"static/js/main.80a60dab.chunk.js","sourcesContent":["//authEndpoint - authenticate url in spotify.\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\n// redirectUri is the uri that we provided to spotify api (our localhost)\nconst redirectUri = \"https://cloning-musicspotify.web.app\";\n//clientId - spotify provided clientId in api\nconst clientId = \"1991a30dc6e9473a969cedcd612c0da9\";\n\n//scopes - permissions that we need to ask spotify web api;\nconst scopes = [\n    'user-read-currently-playing',\n    'user-read-recently-played',\n    'user-read-playback-state',\n    'user-top-read',\n    'user-modify-playback-state',\n];\n\n//clean Url after authentication\nexport const getTokenFromUrl = () => {\n    return window.location.hash\n        .substring(1)\n        .split(\"&\")\n        .reduce((initial, item) => {\n            let parts = item.split(\"=\");\n            initial[parts[0]] = decodeURIComponent(parts[1]);\n            return initial;\n        }, {});\n}\n\n//loginUrl - is the final url for spotify authentication\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`;","import React from \"react\";\nimport \"./LoginPage.css\";\nimport { loginUrl } from \"../../spotify\";\n\nconst LoginPage = () => {\n  return (\n    <div className=\"login\">\n      <img\n        src=\"https://music-b26f.kxcdn.com/wp-content/uploads/2017/06/635963274692858859903160895_spotify-logo-horizontal-black.jpg\"\n        alt=\"Spotify Logo\"\n      />\n      <a href={loginUrl}> LOGIN WITH SPOTIFY </a>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React, { createContext, useContext, useReducer } from \"react\";\n\n//Context Api is the third way to pass data between components without using props. read react documentation\n// useReducer() is a hook as well as useContext(). Context should have wraper for the component as Provider and Consumer\n\nexport const DataLayerContext = createContext();\n\nexport const DataLayer = ({ initialState, reducer, children }) => {\n  return (\n    <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\n      {children}\n    </DataLayerContext.Provider>\n  );\n};\n\nexport const useDataLayerValue = () => useContext(DataLayerContext);\n\n\n","import React from \"react\";\nimport \"./Header.css\";\nimport { Search } from \"@material-ui/icons\";\nimport { Avatar } from \"@material-ui/core\";\nimport { useDataLayerValue } from \"../../State/DataLayer\";\n\nconst Header = () => {\n  const [{ user }, dispatch] = useDataLayerValue();\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        <Search />\n        <input\n          placeholder=\"Search for Artisits, Songs, or Albums\"\n          type=\"text\"\n        />\n      </div>\n      <div className=\"header__right\">\n        <Avatar src={user && user.images[0] ? user.images[0].url : null} alt={user? user.display_name : \"User Avatar\"} />\n        <h4>{user? user.display_name : null}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./SongRow.css\";\n\nfunction SongRow({ track }) {\n  return (\n    <div className=\"songRow\">\n      <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\" />\n      <div className=\"songRow__info\">\n        <h1>{track.name}</h1>\n        <p>\n          {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\n          {track.album.name}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default SongRow;\n","import React from \"react\";\nimport \"./Body.css\";\nimport Header from \"../Header/Header\";\nimport { useDataLayerValue } from \"../../State/DataLayer\";\nimport { PlayCircleFilled, Favorite, MoreHoriz } from \"@material-ui/icons\";\nimport SongRow from \"../SongRow/SongRow\";\n\nconst Body = ({ spotify }) => {\n  const [{ discover_weekly }, dispatch] = useDataLayerValue();\n  console.log(discover_weekly);\n  \n  return (\n    <div className=\"body\">\n      <Header spotify={spotify} />\n      <div className=\"body__info\">\n        <img src={discover_weekly && discover_weekly.img[0] ? discover_weekly.img[0].url : null} alt=\"\" />\n        <div className=\"body__infoText\">\n          <strong>PLAYLIST</strong>\n          <h2>Discover Weekly</h2>\n          <p>{discover_weekly? discover_weekly.description : null}</p>\n        </div>\n      </div>\n      <div className=\"body__songs\">\n        <div className=\"body__icons\">\n          <PlayCircleFilled className=\"body__shuffle\" />\n          <Favorite fontSize=\"large\" />\n          <MoreHoriz />\n        </div>\n        {discover_weekly? discover_weekly.tracks.items.map((item) => (\n          <SongRow track={item.track} />\n        )) : null }\n      </div>\n    </div>\n  );\n};\n\nexport default Body;\n","import React from \"react\";\nimport \"./Footer.css\";\nimport {\n  PlayCircleOutline,\n  SkipPrevious,\n  SkipNext,\n  PlaylistPlay,\n  Shuffle,\n  Repeat,\n  VolumeDown,\n} from \"@material-ui/icons\";\nimport { Grid, Slider } from \"@material-ui/core\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <div className=\"footer__left\">\n        <img\n          src=\"https://i.pinimg.com/originals/8d/c7/52/8dc752834195102e4cb630a53221255e.jpg\"\n          alt=\"\"\n          className=\"footer__albumLogo\"\n        />\n        <div className=\"footer__songInfo\">\n          <h4>My fav song</h4>\n          <p>Atharva</p>\n        </div>\n      </div>\n      <div classNmae=\"footer__center\">\n        <Shuffle className=\"footer__green\" />\n        <SkipPrevious className=\"footer__icon\" />\n        <PlayCircleOutline className=\"footer__icon\" fontSize=\"large\" />\n        <SkipNext className=\"footer__icon\" />\n        <Repeat className=\"footer__green\" />\n      </div>\n      <div className=\"footer__right\">\n        <Grid container spacing={2}>\n          <Grid item>\n            <PlaylistPlay />\n          </Grid>\n          <Grid item>\n            <VolumeDown />\n          </Grid>\n          <Grid item xs>\n            <Slider />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport \"./SideBarOption.css\";\n\nconst SideBarOption = ({ title, Icon }) => {\n  return (\n    <div className=\"sideBarOption\">\n      {Icon && <Icon className=\"sidebarOption__icon\" />}{\" \"}\n      {Icon ? <h4>{title}</h4> : <p>{title}</p>}\n    </div>\n  );\n};\n\nexport default SideBarOption;\n","import React from \"react\";\nimport SideBarOption from \"../SideBarOption/SideBarOption\";\nimport \"./SideBar.css\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { LibraryMusic } from \"@material-ui/icons\";\nimport { useDataLayerValue } from \"../../State/DataLayer\";\n\nconst SideBar = () => {\n    const [{playlists}, dispatch] = useDataLayerValue();\n  return (\n    <div className=\"sidebar\">\n      <img\n        className=\"sidebar__logo\"\n        src=\"https://music-b26f.kxcdn.com/wp-content/uploads/2017/06/635963274692858859903160895_spotify-logo-horizontal-black.jpg\"\n        alt=\"Spotify Logo\"\n      />\n      <SideBarOption title=\"Home\" Icon={HomeIcon}/>\n      <SideBarOption title=\"Search\" Icon={SearchIcon}/>\n      <SideBarOption title=\"Your Library\" Icon={LibraryMusic}/>\n      <br/>\n      <strong classNem=\"sidebar__title\">PLAYLISTS</strong>\n      <hr/>\n      {playlists && playlists.items? playlists.items.map((playlist)=> (\n        <SideBarOption title={playlist.name}/>\n      )) : null}\n    </div>\n  );\n};\n\nexport default SideBar;\n","import React from \"react\";\nimport \"./Player.css\";\nimport Body from \"../Body/Body.js\";\nimport Footer from \"../Footer/Footer.js\";\nimport SideBar from \"../SideBar/SideBar.js\";\n\nconst Player = ({spotify}) => {\n  console.log(spotify);\n  return (\n    <div className=\"player\">\n      <div className=\"player__body\">\n      <SideBar/>\n      <Body spotify={spotify}/>\n      </div>\n      <Footer/>\n    </div>\n  );\n};\n\nexport default Player;\n","import React, { useEffect, useState } from \"react\";\nimport LoginPage from \"./Components/LoginPage/LoginPage\";\nimport \"./App.css\";\nimport { getTokenFromUrl } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Player from \"./Components/Player/Player\";\nimport { DataLayer, useDataLayerValue } from \"./State/DataLayer\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  console.log(useDataLayerValue())\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n      console.log(\"[token]\", token);\n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user,\n        });\n      });\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists,\n        });\n      });\n      spotify.getPlaylist(\"37i9dQZF1E34Ucml4HHx1w\").then((playlist) => {\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: playlist,\n        });\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {/* <DataLayer initialState={initialState} reducer={reducer}> */}\n      {token ? <Player spotify={spotify} />:<LoginPage />}\n      {/* </DataLayer> */}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initialState = {\n    user: null,\n    token: null,\n    playlist: [],\n    playing: false,\n    item: null,\n}\n\nconst reducer = (state, action) => {\n    console.log(action)\n    switch (action.type) {\n        case \"SET_USER\":\n            return {\n                ...state,\n                user: action.user,\n            };\n        case \"SET_TOKEN\":\n            return {\n                ...state,\n                token: action.token,\n            };\n        case \"SET_PLAYLISTS\":\n            return {\n                ...state,\n                playlists: action.playlists,\n            };\n        case \"SET_DISCOVER_WEEKLY\":\n            return {\n                ...state,\n                discover_weekly: action.discover_weekly,\n            };\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer, { initialState } from \"./State/reducer\";\nimport { DataLayer, useDataLayerValue } from \"./State/DataLayer\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n    <App />\n    </DataLayer>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}